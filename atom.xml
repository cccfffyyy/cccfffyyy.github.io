<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>花花的碎片生活</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.cphoenix.cn/"/>
  <updated>2019-05-30T08:47:38.395Z</updated>
  <id>http://www.cphoenix.cn/</id>
  
  <author>
    <name>cuify</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python学习-Day4</title>
    <link href="http://www.cphoenix.cn/2019/05/30/python-20190530/"/>
    <id>http://www.cphoenix.cn/2019/05/30/python-20190530/</id>
    <published>2019-05-30T01:15:30.000Z</published>
    <updated>2019-05-30T08:47:38.395Z</updated>
    
    <content type="html"><![CDATA[<h3 id="高级特性"><a href="#高级特性" class="headerlink" title="高级特性"></a>高级特性</h3><p><font color="e32636">代码越少越好！越简单越好！</font>  </p><h4 id="切片（Slice）"><a href="#切片（Slice）" class="headerlink" title="切片（Slice）"></a>切片（Slice）</h4><p>根据索引取list或tuple的部分元素<br>list、tuple、字符串都可以使用切片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#切片</span></span><br><span class="line">L = [<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>,<span class="string">'E'</span>]</span><br><span class="line">print(L[<span class="number">0</span>:<span class="number">3</span>])   <span class="comment">#从索引0开始，到索引3但不包括索引3</span></span><br><span class="line">M = list(range(<span class="number">20</span>))</span><br><span class="line">print(M)</span><br><span class="line">print(M[<span class="number">-4</span>:<span class="number">-1</span>])  <span class="comment">#倒数第一个元素的索引是-1</span></span><br><span class="line">print(M[:<span class="number">10</span>:<span class="number">2</span>])  <span class="comment">#前10个数，每两个取一个</span></span><br><span class="line">print(M[::<span class="number">5</span>])   <span class="comment">#所有数，每五个取一个</span></span><br><span class="line">print(len(M))</span><br><span class="line">print(M[len(M)<span class="number">-1</span>])</span><br></pre></td></tr></table></figure><pre><code>[&#39;A&#39;, &#39;B&#39;, &#39;C&#39;][0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19][16, 17, 18][0, 2, 4, 6, 8][0, 5, 10, 15]2019</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#实现一个trim()函数，去除字符串首尾的空格</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trim</span><span class="params">(string)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> string[<span class="number">0</span>] == <span class="string">' '</span> <span class="keyword">and</span> string[len(string)<span class="number">-1</span>] == <span class="string">' '</span>:</span><br><span class="line">        <span class="keyword">return</span> string[<span class="number">1</span>:len(string)<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">elif</span> string[<span class="number">0</span>] == <span class="string">' '</span>:</span><br><span class="line">        <span class="keyword">return</span> string[<span class="number">1</span>:]</span><br><span class="line">    <span class="keyword">elif</span> string[len(string)<span class="number">-1</span>] == <span class="string">' '</span>:</span><br><span class="line">        <span class="keyword">return</span> string[<span class="number">0</span>:len(string)<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> string</span><br><span class="line">print(trim(<span class="string">' ABCD '</span>))</span><br><span class="line">print(trim(<span class="string">' ABCD'</span>))</span><br><span class="line">print(trim(<span class="string">'ABCD '</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#去掉所有空格</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trim2</span><span class="params">(string)</span>:</span></span><br><span class="line">    length = len(string)</span><br><span class="line">    start = <span class="number">-1</span></span><br><span class="line">    end = length - <span class="number">1</span></span><br><span class="line">    return_str = []</span><br><span class="line">    <span class="keyword">while</span> start &lt; end:</span><br><span class="line">        start += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> string[start] == <span class="string">' '</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            return_str.append(string[start]) <span class="comment">#序列转化字符串</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join(return_str)</span><br><span class="line">print(<span class="string">'原字符串:"          A B  C DE   "'</span>) </span><br><span class="line">print(<span class="string">'去掉所有空格: "%s%s'</span>%(trim2(<span class="string">'          A B  C DE   '</span>),<span class="string">'"'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#去除字符串前后任意多空格</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trim3</span><span class="params">(string)</span>:</span></span><br><span class="line">    length = len(string)</span><br><span class="line">    start = <span class="number">0</span></span><br><span class="line">    end = length - <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</span><br><span class="line">        <span class="keyword">if</span> string[start] == <span class="string">' '</span>:</span><br><span class="line">            start += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> string[end] == <span class="string">' '</span>:</span><br><span class="line">            end -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> start &gt; end:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> string[start:end+<span class="number">1</span>]</span><br><span class="line">print(<span class="string">'去除字符串前后任意多空格:"%s%s'</span>%(trim3(<span class="string">'          A B  C DE   '</span>),<span class="string">'"'</span>))</span><br></pre></td></tr></table></figure><pre><code>ABCDABCDABCD原字符串:&quot;          A B  C DE   &quot;去掉所有空格: &quot;ABCDE&quot;去除字符串前后任意多空格:&quot;A B  C DE&quot;</code></pre><h4 id="迭代（Iteration）"><a href="#迭代（Iteration）" class="headerlink" title="迭代（Iteration）"></a>迭代（Iteration）</h4><p>给定一个list或者tuple，通过for循环来遍历这个list或tuple，叫做迭代</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用迭代查找一个list中最小和最大值，并返回一个tuple</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findMinAndMax</span><span class="params">(L)</span>:</span></span><br><span class="line">    max=min=<span class="keyword">None</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> L:</span><br><span class="line">       <span class="keyword">if</span> min==<span class="keyword">None</span> <span class="keyword">or</span> min&gt;n:</span><br><span class="line">          min=n</span><br><span class="line">       <span class="keyword">if</span> max==<span class="keyword">None</span> <span class="keyword">or</span> max&lt;n:</span><br><span class="line">          max=n</span><br><span class="line">    <span class="keyword">return</span> (min,max)</span><br><span class="line">print(findMinAndMax([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]))</span><br></pre></td></tr></table></figure><pre><code>(1, 6)</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;高级特性&quot;&gt;&lt;a href=&quot;#高级特性&quot; class=&quot;headerlink&quot; title=&quot;高级特性&quot;&gt;&lt;/a&gt;高级特性&lt;/h3&gt;&lt;p&gt;&lt;font color=&quot;e32636&quot;&gt;代码越少越好！越简单越好！&lt;/font&gt;  &lt;/p&gt;
&lt;h4 id=&quot;切片（Sli
      
    
    </summary>
    
    
      <category term="python" scheme="http://www.cphoenix.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python学习-Day3</title>
    <link href="http://www.cphoenix.cn/2019/05/29/python-20190529/"/>
    <id>http://www.cphoenix.cn/2019/05/29/python-20190529/</id>
    <published>2019-05-29T01:16:30.000Z</published>
    <updated>2019-05-29T07:19:51.040Z</updated>
    
    <content type="html"><![CDATA[<h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><h4 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h4><blockquote><p>hex()  #十六进制转换<br>abs()  #求绝对值，一个参数<br>max()  #求最大值，多个参数<br>int()  #数据类型转整型<br>str()  #数据类型转字符<br>float()  #数据类型转浮点型<br>isinstance()  #数据类型检查函数</p></blockquote><p><a href="http://docs.python.org/3/library/functions.html#abs" target="_blank" rel="noopener">python内置函数</a></p><h3 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h3><p>空函数可以用来做占位符，函数体：pass  </p><p><strong>练习</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">y=input(<span class="string">'输入一个数字求绝对值：'</span>)</span><br><span class="line">z=float(y)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">abs_func</span><span class="params">(x)</span>:</span>   <span class="comment">#def定义函数</span></span><br><span class="line">    <span class="keyword">if</span> x&gt;=<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> -x</span><br><span class="line">print(abs_func(z))</span><br></pre></td></tr></table></figure></p><pre><code>输入一个数字求绝对值：33.0</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> abstest <span class="keyword">import</span> abs_func</span><br><span class="line">z=input(<span class="string">'输入一个数字求绝对值：'</span>)</span><br><span class="line">y=float(z)</span><br><span class="line">print(abs_func(y))</span><br></pre></td></tr></table></figure><pre><code>输入一个数字求绝对值：-33.0</code></pre><p><strong>可变参数</strong> 允许传入0或任意个参数，<em>args,接收的是一个tuple<br><strong>关键字参数</strong> 允许传入0或任意个含参数名的参数，<strong>kw，接收的是一个dict  </strong>命名关键字参数** 限制关键字参数的名字，需要一个特殊分隔符 ，</em>后面的参数被视为命名关键字参数<br>参数定义的顺序必须是：必选参数、默认参数、可变参数、命名关键字参数和关键字参数   </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#计算坐标</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(x,y,step,angle=<span class="number">0</span>)</span>:</span>  </span><br><span class="line">    nx=x+step*math.cos(angle)</span><br><span class="line">    ny=y-step*math.sin(angle)</span><br><span class="line">    <span class="keyword">return</span> nx,ny</span><br><span class="line">x,y=move(<span class="number">100</span>,<span class="number">100</span>,<span class="number">60</span>,math.pi/<span class="number">6</span>)</span><br><span class="line">print(x,y)</span><br><span class="line">r=move(<span class="number">100</span>,<span class="number">100</span>,<span class="number">60</span>,math.pi/<span class="number">6</span>)  <span class="comment">#返回tuple</span></span><br><span class="line">print(r)</span><br></pre></td></tr></table></figure><pre><code>151.96152422706632 70.0(151.96152422706632, 70.0)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#求一元二次方程解</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quadratic</span><span class="params">(a, b, c)</span>:</span>    </span><br><span class="line">    m=b*b<span class="number">-4</span>*a*c</span><br><span class="line">    <span class="keyword">if</span> m&lt;<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">'此题无解'</span>)</span><br><span class="line">    n=math.sqrt(m)</span><br><span class="line">    x1=(-b-n)/<span class="number">2</span>*a</span><br><span class="line">    x2=(-b+n)/<span class="number">2</span>*a</span><br><span class="line">    <span class="keyword">return</span> x1,x2</span><br><span class="line">result=quadratic(<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><pre><code>(-4.0, -2.0)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#计算x的n次方</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">power</span><span class="params">(x,n=<span class="number">2</span>)</span>:</span>  </span><br><span class="line">    s=<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n&gt;<span class="number">0</span>:</span><br><span class="line">        n=n<span class="number">-1</span></span><br><span class="line">        s=s*x</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line">print(power(<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line">print(power(<span class="number">2</span>)) <span class="comment">#默认n=2</span></span><br></pre></td></tr></table></figure><pre><code>84</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#kw关键字参数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span><span class="params">(name,age,**kw)</span>:</span> </span><br><span class="line">    print(<span class="string">'name'</span>,name,<span class="string">'age'</span>,age,<span class="string">'other'</span>,kw)</span><br><span class="line">extract=&#123;<span class="string">'job'</span>:<span class="string">'teacher'</span>,<span class="string">'gender'</span>:<span class="string">'M'</span>&#125;</span><br><span class="line">person(<span class="string">'IVY'</span>,<span class="number">20</span>,**extract)</span><br></pre></td></tr></table></figure><pre><code>name IVY age 20 other {&#39;job&#39;: &#39;teacher&#39;, &#39;gender&#39;: &#39;M&#39;}</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#多个参数相乘</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">product</span><span class="params">(*args)</span>:</span>   </span><br><span class="line">    <span class="keyword">if</span> len(args)==<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">'参数为空'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        s=<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> args:</span><br><span class="line">            s=s*n</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">product1</span><span class="params">(x,*y)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> y:</span><br><span class="line">        x*=i</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line">print(product(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line">print(product1(<span class="number">2</span>,<span class="number">3</span>))</span><br></pre></td></tr></table></figure><pre><code>246</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#递归函数    尾递归，防止栈溢出</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fact</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> fact_iter(n,<span class="number">1</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fact_iter</span><span class="params">(num,product)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> num==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> product</span><br><span class="line">    <span class="keyword">return</span> fact_iter(num<span class="number">-1</span>,num*product)</span><br><span class="line">print(fact(<span class="number">5</span>))</span><br></pre></td></tr></table></figure><pre><code>120</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#汉诺塔</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hanoi</span><span class="params">(n,a,b,c)</span>:</span>  <span class="comment">#把a柱所有的圆盘移到c柱</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        print(a,<span class="string">'--&gt;'</span>,c)  <span class="comment">#如果a柱只剩下1个圆盘，移到c柱</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        hanoi(n<span class="number">-1</span>,a,c,b) <span class="comment">#剩下的n-1移到b柱</span></span><br><span class="line">        hanoi(<span class="number">1</span>,a,b,c)     <span class="comment">#a柱剩下的一个圆盘移到c柱</span></span><br><span class="line">        hanoi(n<span class="number">-1</span>,b,a,c) <span class="comment">#剩下的n-1从b柱移到c柱</span></span><br><span class="line">hanoi(<span class="number">3</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>)</span><br></pre></td></tr></table></figure><pre><code>A --&gt; CA --&gt; BC --&gt; BA --&gt; CB --&gt; AB --&gt; CA --&gt; C</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;函数&quot;&gt;&lt;a href=&quot;#函数&quot; class=&quot;headerlink&quot; title=&quot;函数&quot;&gt;&lt;/a&gt;函数&lt;/h3&gt;&lt;h4 id=&quot;内置函数&quot;&gt;&lt;a href=&quot;#内置函数&quot; class=&quot;headerlink&quot; title=&quot;内置函数&quot;&gt;&lt;/a&gt;内置函数&lt;/h
      
    
    </summary>
    
    
      <category term="python" scheme="http://www.cphoenix.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python学习-Day2</title>
    <link href="http://www.cphoenix.cn/2019/05/28/python-20190528/"/>
    <id>http://www.cphoenix.cn/2019/05/28/python-20190528/</id>
    <published>2019-05-28T05:59:14.000Z</published>
    <updated>2019-05-29T01:18:55.020Z</updated>
    
    <content type="html"><![CDATA[<h3 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#条件判断</span></span><br><span class="line">age = <span class="number">3</span></span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    print(<span class="string">'Adult'</span>)</span><br><span class="line"><span class="keyword">elif</span> age&gt;<span class="number">6</span>:</span><br><span class="line">    print(<span class="string">'Teenager'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'Kid'</span>)</span><br></pre></td></tr></table></figure><pre><code>Kid</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s = input(<span class="string">'birth is : '</span>)</span><br><span class="line">birth = int(s)</span><br><span class="line"><span class="keyword">if</span> birth &lt; <span class="number">2000</span>:</span><br><span class="line">    print(<span class="string">'00前'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'00后'</span>)</span><br></pre></td></tr></table></figure><pre><code>birth is : 199500前</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'格式 身高：1.75m 体重：80.5kg'</span>)</span><br><span class="line">a = input(<span class="string">'Your height : '</span>)</span><br><span class="line">b = input(<span class="string">'Your weight : '</span>)</span><br><span class="line">height = float(a)</span><br><span class="line">weight = float(b)</span><br><span class="line">bmi=weight/(height*height)</span><br><span class="line"><span class="keyword">if</span> bmi&gt;<span class="number">32</span>:</span><br><span class="line">    print(<span class="string">'Your BMI is : '</span>,bmi,<span class="string">'严重肥胖'</span>)</span><br><span class="line"><span class="keyword">elif</span> bmi&gt;<span class="number">28</span>:</span><br><span class="line">    print(<span class="string">'Your BMI is : '</span>,bmi,<span class="string">'肥胖'</span>)</span><br><span class="line"><span class="keyword">elif</span> bmi&gt;<span class="number">25</span>:</span><br><span class="line">    print(<span class="string">'Your BMI is : '</span>,bmi,<span class="string">'过重'</span>)</span><br><span class="line"><span class="keyword">elif</span> bmi&gt;<span class="number">18.5</span>:</span><br><span class="line">    print(<span class="string">'Your BMI is : '</span>,bmi,<span class="string">'正常'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'Your BMI is : '</span>,bmi,<span class="string">'过轻'</span>)</span><br></pre></td></tr></table></figure><pre><code>格式 身高：1.75m 体重：80.5kgYour height : 1.75Your weight : 68Your BMI is :  22.20408163265306 正常</code></pre><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><p><strong>for…in</strong>  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">names=[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>]</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">    print(name)</span><br></pre></td></tr></table></figure><pre><code>ABCD</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">101</span>):  <span class="comment">#整数序列函数</span></span><br><span class="line">    sum=sum+x</span><br><span class="line">print(sum)</span><br></pre></td></tr></table></figure><pre><code>5050</code></pre><p><strong>while</strong>  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#while</span></span><br><span class="line">sum = <span class="number">0</span></span><br><span class="line">n = <span class="number">99</span></span><br><span class="line"><span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">    sum = sum + n</span><br><span class="line">    n = n - <span class="number">2</span></span><br><span class="line">print(sum)</span><br></pre></td></tr></table></figure><pre><code>2500</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">L = [<span class="string">'Bart'</span>, <span class="string">'Lisa'</span>, <span class="string">'Adam'</span>]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> L:</span><br><span class="line">   print(x)</span><br></pre></td></tr></table></figure><pre><code>BartLisaAdam</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> n &lt;=<span class="number">100</span>:</span><br><span class="line">    <span class="keyword">if</span> n&gt;<span class="number">5</span>:</span><br><span class="line">        <span class="keyword">break</span>   <span class="comment">#提前结束循环</span></span><br><span class="line">    print(n)</span><br><span class="line">    n=n+<span class="number">1</span></span><br><span class="line">print(<span class="string">'end'</span>)</span><br></pre></td></tr></table></figure><pre><code>12345end</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">n=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> n &lt; <span class="number">10</span>:</span><br><span class="line">    n=n+<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> n%<span class="number">2</span>==<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">continue</span>   <span class="comment">#跳过这次循环，直接进行到下次</span></span><br><span class="line">    print(n)</span><br></pre></td></tr></table></figure><pre><code>13579</code></pre><h3 id="dict"><a href="#dict" class="headerlink" title="dict"></a>dict</h3><p>内置字典：dict，使用键-值（key-value）存储，具有极快的查找速度<br>和list相比，dict查找的插入速度极快，但是占用大量内存，内存浪费多<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#dict</span></span><br><span class="line">d=&#123;<span class="string">'MARY'</span>:<span class="number">90</span>,</span><br><span class="line">     <span class="string">'JOHN'</span>:<span class="number">80</span>,</span><br><span class="line">     <span class="string">'ALICE'</span>:<span class="number">95</span>&#125;</span><br><span class="line">print(d)</span><br><span class="line">d[<span class="string">'MARY'</span>]=<span class="number">80</span></span><br><span class="line">print(d[<span class="string">'MARY'</span>])</span><br><span class="line">d.pop(<span class="string">'ALICE'</span>)</span><br><span class="line">print(d)</span><br><span class="line">print(d.get(<span class="string">'ALICE'</span>,<span class="number">-1</span>))</span><br></pre></td></tr></table></figure></p><pre><code>{&#39;MARY&#39;: 90, &#39;JOHN&#39;: 80, &#39;ALICE&#39;: 95}80{&#39;MARY&#39;: 80, &#39;JOHN&#39;: 80}-1</code></pre><h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><p>set也是一组key的集合，但是不存储value，set中无重复的key。创建一个set，需要提供一个list作为输入集合。  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#set</span></span><br><span class="line">s1=set([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">print(s)</span><br><span class="line">s1.add(<span class="number">4</span>)</span><br><span class="line">print(s)</span><br><span class="line">s1.remove(<span class="number">4</span>)</span><br><span class="line">print(s)</span><br><span class="line">s2=set([<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line">print(s1&amp;s2)</span><br><span class="line">print(s1|s2)</span><br></pre></td></tr></table></figure><pre><code>{1, 2, 3}{1, 2, 3}{1, 2, 3}{3}{1, 2, 3, 4, 5}</code></pre><p><strong>小结：</strong><br><strong>条件判断格式</strong> <font color="58c689">if:</font>…<font color="58c689">elif:</font>…<font color="58c689">else:</font><br><strong>循环</strong> <strong>第一种</strong> <font color="58c689">while:</font><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>第二种</strong> <font color="58c689">for…in:</font><br><strong>循环控制：break，continue</strong></p><p><strong>元素可变：list，dict，set</strong><br><strong>元素不可变：tuple</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;条件判断&quot;&gt;&lt;a href=&quot;#条件判断&quot; class=&quot;headerlink&quot; title=&quot;条件判断&quot;&gt;&lt;/a&gt;条件判断&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p
      
    
    </summary>
    
    
      <category term="python" scheme="http://www.cphoenix.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python学习-Day1</title>
    <link href="http://www.cphoenix.cn/2019/05/27/python-20190527/"/>
    <id>http://www.cphoenix.cn/2019/05/27/python-20190527/</id>
    <published>2019-05-27T02:19:12.000Z</published>
    <updated>2019-05-29T01:19:07.302Z</updated>
    
    <content type="html"><![CDATA[<h4 id="首先进行环境安装（Mac）"><a href="#首先进行环境安装（Mac）" class="headerlink" title="首先进行环境安装（Mac）"></a><font color="b35549">首先进行环境安装（Mac）</font></h4><p>1.python安装</p><blockquote><p>brew install python<br>python -V  &nbsp; //版本查看</p></blockquote><p>2.jupyter安装</p><blockquote><p>pip3 install jupyter<br>jupyter notebook &nbsp;  //启动服务  </p></blockquote><h4 id="环境配置好后，小白开始学习python啦～"><a href="#环境配置好后，小白开始学习python啦～" class="headerlink" title="环境配置好后，小白开始学习python啦～"></a><font color="b35549">环境配置好后，小白开始学习python啦～</font></h4><p>[python学习资料链接]（<a href="https://www.liaoxuefeng.com/wiki/1016959663602400）" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/1016959663602400）</a>  </p><h4 id="python基础"><a href="#python基础" class="headerlink" title="python基础"></a><font color="b35549">python基础</font></h4><p>注释用#标记，转义字符用\标记<br>等号=是赋值语句，可以把任意数据类型赋值给变量，同一变量可以被反复赋值，且可以是不同类型的变量。动态语言。  </p><p>格式化字符串：<font color="4c8cd2">%</font>  </p><p><font color="4c8cd2">%s</font> 表示用字符串替换；</p><p><font color="4c8cd2">%d</font> 表示用整数替换</p><p><font color="4c8cd2">%f</font> 表示用浮点数替换</p><blockquote><p>练习<br>>&gt; print(‘hello,%s~ %d day fighting!’%(‘cuify’,1))<br>hello,cuify~ 1 day fighting!  </p></blockquote><p><strong>list</strong><br>有序列表，可以随时添加和删除其中的元素<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#list</span></span><br><span class="line">classmates=[<span class="string">'TOM'</span>,<span class="string">'JACK'</span>,<span class="string">'MARY'</span>]</span><br><span class="line">classmates.append(<span class="string">'ALICE'</span>) <span class="comment">#添加元素</span></span><br><span class="line">classmates.insert(<span class="number">1</span>,<span class="string">'JOHN'</span>)  <span class="comment">#插入元素</span></span><br><span class="line">print(classmates)</span><br><span class="line">classmates.pop(<span class="number">1</span>) <span class="comment">#pop(i) i是索引位置，没写的话会删除最后一个元素</span></span><br><span class="line">print(classmates)</span><br><span class="line">classmates[<span class="number">1</span>]=<span class="string">'IVY'</span></span><br><span class="line">print(classmates)</span><br></pre></td></tr></table></figure></p><pre><code>[&#39;TOM&#39;, &#39;JOHN&#39;, &#39;JACK&#39;, &#39;MARY&#39;, &#39;ALICE&#39;][&#39;TOM&#39;, &#39;JACK&#39;, &#39;MARY&#39;, &#39;ALICE&#39;][&#39;TOM&#39;, &#39;IVY&#39;, &#39;MARY&#39;, &#39;ALICE&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s=[<span class="string">'apple'</span>,<span class="string">'banana'</span>,<span class="string">'peach'</span>]</span><br><span class="line">p=[<span class="string">'watermelon'</span>,s,<span class="string">'grape'</span>]   </span><br><span class="line">print(p)</span><br></pre></td></tr></table></figure><pre><code>[&#39;watermelon&#39;, [&#39;apple&#39;, &#39;banana&#39;, &#39;peach&#39;], &#39;grape&#39;]</code></pre><p><strong>tuple</strong><br>有序列表，一旦初始化就不能修改。tuple的元素不变指的是tuple的每个元素，指向永不变。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#tuple</span></span><br><span class="line">classmates=(<span class="string">'TOM'</span>,<span class="string">'JACK'</span>,<span class="string">'MARY'</span>)</span><br><span class="line">print(classmates)</span><br></pre></td></tr></table></figure><pre><code>(&#39;TOM&#39;, &#39;JACK&#39;, &#39;MARY&#39;)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s=(<span class="string">'a'</span>,<span class="string">'b'</span>,[<span class="string">'X'</span>,<span class="string">'Y'</span>],<span class="string">'c'</span>)</span><br><span class="line">print(s)</span><br><span class="line">s[<span class="number">2</span>][<span class="number">0</span>]= <span class="string">'D'</span></span><br><span class="line">print(s)</span><br><span class="line">s[<span class="number">1</span>]=<span class="string">'r'</span>  <span class="comment">#元素不可替换</span></span><br></pre></td></tr></table></figure><pre><code>(&#39;a&#39;, &#39;b&#39;, [&#39;X&#39;, &#39;Y&#39;], &#39;c&#39;)(&#39;a&#39;, &#39;b&#39;, [&#39;D&#39;, &#39;Y&#39;], &#39;c&#39;)---------------------------------------------------------------------------TypeError                                 Traceback (most recent call last)&lt;ipython-input-62-e6a11ff7e543&gt; in &lt;module&gt;      3 s[2][0]= &#39;D&#39;      4 print(s)----&gt; 5 s[1]=&#39;r&#39;TypeError: &#39;tuple&#39; object does not support item assignment</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;首先进行环境安装（Mac）&quot;&gt;&lt;a href=&quot;#首先进行环境安装（Mac）&quot; class=&quot;headerlink&quot; title=&quot;首先进行环境安装（Mac）&quot;&gt;&lt;/a&gt;&lt;font color=&quot;b35549&quot;&gt;首先进行环境安装（Mac）&lt;/font&gt;&lt;/h4&gt;&lt;
      
    
    </summary>
    
    
      <category term="python" scheme="http://www.cphoenix.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>数据库系统工程师软考知识点整理</title>
    <link href="http://www.cphoenix.cn/2019/05/23/%E8%BD%AF%E8%80%83%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/"/>
    <id>http://www.cphoenix.cn/2019/05/23/软考知识点整理/</id>
    <published>2019-05-23T02:29:12.000Z</published>
    <updated>2019-05-24T09:25:14.282Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据库系统工程师-软考知识点整理"><a href="#数据库系统工程师-软考知识点整理" class="headerlink" title=" 数据库系统工程师-软考知识点整理 "></a><font color="#8968CD" size="5"> 数据库系统工程师-软考知识点整理 </font></h2><h3 id="💯"><a href="#💯" class="headerlink" title="💯"></a><font color="#8B3A62">💯</font></h3><p>1.音频数字化过程中采样频率应为声音最高频率2倍</p><p>2.编译过程：词法分析阶段&gt;语法分析阶段&gt;语义分析阶段&gt;中间代码生成&gt;目标代码生成</p><p>3.面向对象方法中的多态：不同类的对象对同一消息做出不同响应。三个条件为有继承关系、子类重写父类方法、父类引用指向子类对象</p><p>4.外模式/模式：数据与程序的逻辑独立性，简称数据的逻辑独立性<br>  模式/内模式：数据与程序的物理独立性，简称数据的物理独立性</p><p>5.数据模型三要素：数据结构、数据操纵、完整性约束</p><p>6.候选码只出现在左边  </p><p>7.无损连接性判断：存在R1∩R2-&gt;R1-R2或R1∩R2-&gt;R2-R1被F逻辑蕴含的情况，则具有无损连接性<br>无损联接分解是将一个关系模式分解成若干个关系模式后，通过自然联接和投影等运算仍能还原到原来的关系模式，则称这种分解为无损联接分解。 </p><p>8.满足函数依赖的条件：分解后所有的关系模式加起来和原先的关系模式中的函数依赖是一样的</p><p>9.数据库概念结构设计阶段：抽象&gt;设计局部视图&gt;合并取消冲突&gt;修改重构消除冗余</p><p>10.路由策略：为了改变网络流量所经过的途径而修改路由信息的技术</p><p>11.网络层次与主要设备对应关系： 网络层-路由器，数据链路层-网桥、交换机，传输层和会话层-软件功能</p><p>12.I/O设备管理软件一般分4层：中断处理程序、设备驱动程序、与设备无关的系统软件和用户级软件</p><p>13.假如关系R和S的元数分别为r和s，那么他们的笛卡儿积就是r+s的元组组合，而若R有m个元组，S有n个元组，则R×S应有m*n个元组</p><p>14.脏读：读取未提交数据<br>&emsp;&nbsp;不可重复读：前后多次读取，读取内容不一致<br>&emsp;&nbsp;幻影读：前后多次读取，读取数据总量不一致</p><p>15.部分函数依赖：设X,Y是关系R的两个属性集合，存在X→Y，若X’是X的真子集，存在X’→Y，则称Y部分函数依赖于X。<br>举个例子：通过AB能得出C，通过A也能得出C，通过B也能得出C，那么说C部分依赖于AB。</p><p>完全函数依赖：设X,Y是关系R的两个属性集合，X’是X的真子集，存在X→Y，但对每一个X’都有X’!→Y，则称Y完全函数依赖于X。<br>举个例子：通过AB能得出C，但是AB单独得不出C，那么说C完全依赖于AB.</p><p>传递函数依赖：设X,Y,Z是关系R中互不相同的属性集合，存在X→Y(Y !→X),Y→Z，则称Z传递函数依赖于X。<br>举个例子：通过A得到B，通过B得到C，但是C得不到B，B得不到A，那么成C传递依赖于A</p><p>16.三种范式<br>1、第一范式（1NF）：一个关系模式R的所有属性都是不可分的基本数据项。<br>2、第二范式（2NF）：满足第一范式，然后消除部分依赖。<br>3、第三范式（3NF）： 满足第二范式，消除传递依赖。</p><p>17.触发器的定义：某个条件成立的时候，触发器里定义的语句就会被自动的执行。触发器不需要人为的去调用，也不能调用。<br>(1).语句级触发器：可以在某些语句执行前或执行后被触发<br>(2).行级触发器：在定义了触发的表中的行数据改变时就会被触发一次</p><p>18.E-R图<br>1.三要素：实体（矩形）、属性（椭圆形）、关系（菱形）<br>2.作为主键的属性在文字下面加下划线<br>3.多值属性 双线椭圆表示；派生属性 虚线椭圆表示；可选属性 椭圆的文字后用(o)表示</p><p>19.三类加密算法<br>三类：<br>(1).对称加密：加密和解密使用相同密钥的加密算法。DES、3DES、DESX、Blowfish、IDEA、RC4、RC5、RC6和AES</p><p>(2).非对称加密：加密和解密使用不同密钥的加密算法，也叫公私钥加密。RSA、ECC（移动设备用）、Diffie-Hellman、El Gamal、DSA（数字签名用）</p><p>(3).Hash算法：Hash算法常用在不可还原的密码存储、信息完整性校验等。MD2、MD4、MD5、HAVAL、SHA、SHA-1、HMAC、HMAC-MD5、HMAC-SHA1</p><p>非对称加密算法运行速度慢，可以实现签名；<br>对称加密算法，建议在需要加密大量数据的时候使用，提高加解密速度；</p><p>在实际的操作过程中，通常采用的方式是：采用非对称加密算法管理对称算法的密钥，然后用对称加密算法加密数据，这样我们就集成了两类加密算法的优点，既实现了加密速度快的优点，又实现了安全方便管理密钥的优点。</p><p>20.PV操作与信号量的处理有关，P表示通过，V表示释放。用一个信号量与一个消息联系起来，当信号量的值为0时，表示期望的消息尚未产生；当信号量的值非0时，表示期望的消息已经存在。用PV操作实现进程同步时，调用P操作测试消息是否到达，调用V操作发送消息。</p><p>21.2PL 两段锁协议<br>定义：所有的读写操作之前均需要加锁，解锁操作后不允许出现加锁操作。<br>S锁：加S锁后其他事务可读不可写，直至加锁事务结束；<br>X锁：加X锁后其他事务均不可读或者写，直至事务结束；<br>事务执行分两个阶段：1是获得封锁阶段，2是释放封锁阶段，2PL可能会产生死锁；<br>2PL可以防止丢失修改、读脏数据等；是事务可串行化的必要条件，但不是充分条件；</p><p>22.可串行性：当一组事务交叉执行的结果和串行执行的结果一致时，这组事务具有可串行性</p><p>23.一级锁：所有写操作前加X锁，事务结束释放，可以防止丢失修改<br>二级锁：所有写操作前加X锁，事务结束释放；读操作前加S锁，操作结束释放，可以防止丢失修改和读脏数据<br>三级锁：所有写操作前加X锁，事务结束释放；读操作前加S锁，事务结束释放，可以防止丢失修改和读脏数据、不可重复读。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;数据库系统工程师-软考知识点整理&quot;&gt;&lt;a href=&quot;#数据库系统工程师-软考知识点整理&quot; class=&quot;headerlink&quot; title=&quot; 数据库系统工程师-软考知识点整理 &quot;&gt;&lt;/a&gt;&lt;font color=&quot;#8968CD&quot; size=&quot;5&quot;&gt; 数据库系
      
    
    </summary>
    
    
      <category term="学习" scheme="http://www.cphoenix.cn/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>2019.05.23 ☀️</title>
    <link href="http://www.cphoenix.cn/2019/05/23/20190523/"/>
    <id>http://www.cphoenix.cn/2019/05/23/20190523/</id>
    <published>2019-05-23T01:52:39.000Z</published>
    <updated>2019-05-29T01:18:30.648Z</updated>
    
    <content type="html"><![CDATA[<h3 id="离考试还有两天，学习进度达到20-记录，😢"><a href="#离考试还有两天，学习进度达到20-记录，😢" class="headerlink" title="离考试还有两天，学习进度达到20%记录，😢"></a>离考试还有两天，学习进度达到20%记录，😢</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;离考试还有两天，学习进度达到20-记录，😢&quot;&gt;&lt;a href=&quot;#离考试还有两天，学习进度达到20-记录，😢&quot; class=&quot;headerlink&quot; title=&quot;离考试还有两天，学习进度达到20%记录，😢&quot;&gt;&lt;/a&gt;离考试还有两天，学习进度达到20%记录，
      
    
    </summary>
    
    
      <category term="零零碎碎" scheme="http://www.cphoenix.cn/tags/%E9%9B%B6%E9%9B%B6%E7%A2%8E%E7%A2%8E/"/>
    
  </entry>
  
  <entry>
    <title>2019.05.16 ☀️</title>
    <link href="http://www.cphoenix.cn/2019/05/16/20190516/"/>
    <id>http://www.cphoenix.cn/2019/05/16/20190516/</id>
    <published>2019-05-16T08:34:16.000Z</published>
    <updated>2019-05-29T01:17:45.906Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一些以前写的想法"><a href="#一些以前写的想法" class="headerlink" title="一些以前写的想法"></a>一些以前写的想法</h4><p>2018.10.25<br>梦会反映现实中捕捉不到的潜意识，负面的、希望的，然而使我略微欣慰的,是我在现实中隐隐意识到了，或许我在主动面对这样自己了。  </p><p>2018.11.06<br>突然就会很想感谢生命中的贵人，感谢他们在我人生中每一个微不足道的节骨眼助了力。  </p><p>2018.11.12<br>生日周的第一天变得很亢奋，一下不能理解原来的负面情绪都是从哪来的了。</p><p>2019.2.15<br>今天开始准备数据库系统工程师的考试，希望能坚持下去，要把大学的专业课重新看一遍，脑壳痛。脑子饱了，肚子瘪了。           </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一些以前写的想法&quot;&gt;&lt;a href=&quot;#一些以前写的想法&quot; class=&quot;headerlink&quot; title=&quot;一些以前写的想法&quot;&gt;&lt;/a&gt;一些以前写的想法&lt;/h4&gt;&lt;p&gt;2018.10.25&lt;br&gt;梦会反映现实中捕捉不到的潜意识，负面的、希望的，然而使我略微欣慰
      
    
    </summary>
    
    
      <category term="零零碎碎" scheme="http://www.cphoenix.cn/tags/%E9%9B%B6%E9%9B%B6%E7%A2%8E%E7%A2%8E/"/>
    
  </entry>
  
</feed>
