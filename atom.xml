<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>花花的碎片生活</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.cphoenix.cn/"/>
  <updated>2019-05-28T09:06:59.460Z</updated>
  <id>http://www.cphoenix.cn/</id>
  
  <author>
    <name>cuify</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python学习-Day2</title>
    <link href="http://www.cphoenix.cn/2019/05/28/python-2019.05.28/"/>
    <id>http://www.cphoenix.cn/2019/05/28/python-2019.05.28/</id>
    <published>2019-05-28T05:59:14.000Z</published>
    <updated>2019-05-28T09:06:59.460Z</updated>
    
    <content type="html"><![CDATA[<h3 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h3><blockquote><p>练习<br>>&gt;&gt;age = 3<br>>&gt;&gt;if age &gt;= 18:<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;print(‘Adult’)<br>>&gt;&gt;elif age&gt;6:<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;print(‘Teenager’)<br>>&gt;&gt;else:<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;print(‘Kid’)<br>Kid</p><p>>&gt;&gt;s = input(‘birth is : ‘)<br>>&gt;&gt;birth = int(s) &nbsp;&nbsp;#输入为字符串，需要转换格式<br>>&gt;&gt;if birth &lt; 2000:<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;print(‘00前’)<br>>&gt;&gt;else:<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;print(‘00后’)<br>birth is : 1995<br>00前</p><p>>&gt;&gt;print(‘格式 身高：1.75m 体重：80.5kg’)<br>>&gt;&gt;a = input(‘Your height : ‘)<br>>&gt;&gt;b = input(‘Your weight : ‘)<br>>&gt;&gt;height = float(a)<br>>&gt;&gt;weight = float(b)<br>>&gt;&gt;bmi=weight/(height*height)<br>>&gt;&gt;if bmi&gt;32:<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;print(‘Your BMI is : ‘,bmi,’严重肥胖’)<br>>&gt;&gt;elif bmi&gt;28:<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;print(‘Your BMI is : ‘,bmi,’肥胖’)<br>>&gt;&gt;elif bmi&gt;25:<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;print(‘Your BMI is : ‘,bmi,’过重’)<br>>&gt;&gt;elif bmi&gt;18.5:<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;print(‘Your BMI is : ‘,bmi,’正常’)<br>>&gt;&gt;else:<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;print(‘Your BMI is : ‘,bmi,’过轻’)<br>格式 身高：1.75m 体重：80.5kg<br>Your height : 1.75<br>Your weight : 68<br>Your BMI is :  22.20408163265306 正常</p></blockquote><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><p><strong>for…in</strong>  </p><blockquote><p>练习<br>>&gt;&gt;names=[‘A’,’B’,’C’,’D’]<br>>&gt;&gt;for name in names:<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;print(name)<br>A<br>B<br>C<br>D</p><p>>&gt;&gt;sum=0<br>>&gt;&gt;for x in range(101):  #整数序列函数<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;sum=sum+x<br>>&gt;&gt;print(sum)<br>5050</p><p>>&gt;&gt;L = [‘Bart’, ‘Lisa’, ‘Adam’]<br>>&gt;&gt;for x in L:<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;print(x)<br>Bart<br>Lisa<br>Adam</p><p>>&gt;&gt;n = 1<br>>&gt;&gt;while n &lt;=100:<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;if n&gt;5:<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break   #提前结束循环<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;print(n)<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;n=n+1<br>>&gt;&gt;print(‘end’)<br>1<br>2<br>3<br>4<br>5<br>end</p><p>>&gt;&gt;n = 0<br>>&gt;&gt;while n &lt; 10:<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;n=n+1<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;if n%2 == 0:<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue   #跳过这次循环，直接进行到下次<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;print(n)<br>1<br>3<br>5<br>7<br>9</p></blockquote><h3 id="dict"><a href="#dict" class="headerlink" title="dict"></a>dict</h3><p>内置字典：dict，使用键-值（key-value）存储，具有极快的查找速度<br>和list相比，dict查找的插入速度极快，但是占用大量内存，内存浪费多 </p><blockquote><p>练习<br>>&gt;&gt;d={‘MARY’:90,<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;’JOHN’:80,<br>>&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;’ALICE’:95}<br>>&gt;&gt;print(d)<br>>&gt;&gt;d[‘MARY’]=80<br>>&gt;&gt;print(d[‘MARY’])<br>>&gt;&gt;d.pop(‘ALICE’)<br>>&gt;&gt;print(d)<br>>&gt;&gt;print(d.get(‘ALICE’,-1))<br>{‘MARY’: 90, ‘JOHN’: 80, ‘ALICE’: 95}<br>80<br>{‘MARY’: 80, ‘JOHN’: 80}<br>-1  </p></blockquote><h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><p>set也是一组key的集合，但是不存储value，set中无重复的key。创建一个set，需要提供一个list作为输入集合。  </p><blockquote><p>练习<br>>&gt;&gt;s1=set([1,2,3])<br>>&gt;&gt;print(s)<br>>&gt;&gt;s1.add(4)<br>>&gt;&gt;print(s)<br>>&gt;&gt;s1.remove(4)<br>>&gt;&gt;print(s)<br>>&gt;&gt;s2=set([3,4,5]<br>>&gt;&gt;print(s1&amp;s2)<br>>&gt;&gt;print(s1|s2)<br>{1, 2, 3}<br>{1, 2, 3}<br>{1, 2, 3}<br>{3}<br>{1, 2, 3, 4, 5}</p></blockquote><p><strong>小结：</strong><br><strong>条件判断格式</strong> <font color="58c689"><strong>if:</strong></font><br><strong>…</strong></p><p><font color="58c689"><strong>elif:</strong></font><br><strong>…</strong></p><p><font color="58c689"><strong>else:</strong></font><br><strong>循环</strong> <strong>第一种</strong> <font color="58c689"><strong>while:</strong></font><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>第二种</strong> <font color="58c689"><strong>for…in:</strong></font><br><strong>循环控制：break，continue</strong></p><p><strong>元素可变：list，dict，set</strong><br><strong>元素不可变：tuple</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;条件判断&quot;&gt;&lt;a href=&quot;#条件判断&quot; class=&quot;headerlink&quot; title=&quot;条件判断&quot;&gt;&lt;/a&gt;条件判断&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;练习&lt;br&gt;&gt;&amp;gt;&amp;gt;age = 3&lt;br&gt;&gt;&amp;gt;&amp;gt;if age &amp;gt;= 1
      
    
    </summary>
    
    
      <category term="python" scheme="http://www.cphoenix.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python学习-Day1</title>
    <link href="http://www.cphoenix.cn/2019/05/27/python-2019.05.27/"/>
    <id>http://www.cphoenix.cn/2019/05/27/python-2019.05.27/</id>
    <published>2019-05-27T02:19:12.000Z</published>
    <updated>2019-05-28T05:42:55.382Z</updated>
    
    <content type="html"><![CDATA[<h4 id="首先进行环境安装（Mac）"><a href="#首先进行环境安装（Mac）" class="headerlink" title="首先进行环境安装（Mac）"></a><font color="b35549">首先进行环境安装（Mac）</font></h4><p>1.python安装</p><blockquote><p>brew install python<br>python -V  &nbsp; //版本查看</p></blockquote><p>2.jupyter安装</p><blockquote><p>pip3 install jupyter<br>jupyter notebook &nbsp;  //启动服务  </p></blockquote><h4 id="环境配置好后，小白开始学习python啦～"><a href="#环境配置好后，小白开始学习python啦～" class="headerlink" title="环境配置好后，小白开始学习python啦～"></a><font color="b35549">环境配置好后，小白开始学习python啦～</font></h4><p>[python学习资料链接]（<a href="https://www.liaoxuefeng.com/wiki/1016959663602400）" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/1016959663602400）</a>  </p><h4 id="python基础"><a href="#python基础" class="headerlink" title="python基础"></a><font color="b35549">python基础</font></h4><p>注释用#标记，转义字符用\标记<br>等号=是赋值语句，可以把任意数据类型赋值给变量，同一变量可以被反复赋值，且可以是不同类型的变量。动态语言。  </p><p>格式化字符串：<font color="4c8cd2">%</font>  </p><p><font color="4c8cd2">%s</font> 表示用字符串替换；</p><p><font color="4c8cd2">%d</font> 表示用整数替换</p><p><font color="4c8cd2">%f</font> 表示用浮点数替换</p><blockquote><p>练习<br>>&gt; print(‘hello,%s~ %d day fighting!’%(‘cuify’,1))<br>hello,cuify~ 1 day fighting!  </p></blockquote><p><strong>list</strong><br>有序列表，可以随时添加和删除其中的元素</p><blockquote><p>练习<br>>&gt;&gt;classmates=[‘TOM’,’JACK’,’MARY’]<br>>&gt;&gt;classmates.append(‘ALICE’) #添加元素<br>>&gt;&gt;classmates.insert(1,’JOHN’)  #插入元素<br>>&gt;&gt;print(classmates)<br>>&gt;&gt;classmates.pop(1) &nbsp;#pop(i) i是索引位置，没写的话会删除最后一个元素<br>>&gt;&gt;print(classmates)<br>>&gt;&gt;classmates[1]=’IVY’<br>>&gt;&gt;print(classmates)<br>[‘TOM’, ‘JOHN’, ‘JACK’, ‘MARY’, ‘ALICE’]<br>[‘TOM’, ‘JACK’, ‘MARY’, ‘ALICE’]<br>[‘TOM’, ‘IVY’, ‘MARY’, ‘ALICE’]</p><p>>&gt;&gt;s=[‘apple’,’banana’,’peach’]<br>>&gt;&gt;p=[‘watermelon’,s,’grape’]<br>>&gt;&gt;print(p)<br>[‘watermelon’, [‘apple’, ‘banana’, ‘peach’], ‘grape’]</p></blockquote><p><strong>tuple</strong><br>有序列表，一旦初始化就不能修改。tuple的元素不变指的是tuple的每个元素，指向永不变。</p><blockquote><p>练习<br>>&gt;&gt;classmates=(‘TOM’,’JACK’,’MARY’)<br>>&gt;&gt;print(classmates)<br>(‘TOM’, ‘JACK’, ‘MARY’)</p><p>>&gt;&gt;s=(‘a’,’b’,[‘X’,’Y’],’c’)<br>>&gt;&gt;print(s)<br>>&gt;&gt;s[2][0]= ‘D’  #tuple里面嵌套list，可以更改list中的元素。<br>>&gt;&gt;print(s)<br>(‘a’, ‘b’, [‘X’, ‘Y’], ‘c’)<br>(‘a’, ‘b’, [‘D’, ‘Y’], ‘c’)  </p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;首先进行环境安装（Mac）&quot;&gt;&lt;a href=&quot;#首先进行环境安装（Mac）&quot; class=&quot;headerlink&quot; title=&quot;首先进行环境安装（Mac）&quot;&gt;&lt;/a&gt;&lt;font color=&quot;b35549&quot;&gt;首先进行环境安装（Mac）&lt;/font&gt;&lt;/h4&gt;&lt;
      
    
    </summary>
    
    
      <category term="python" scheme="http://www.cphoenix.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>数据库系统工程师软考知识点整理</title>
    <link href="http://www.cphoenix.cn/2019/05/23/%E8%BD%AF%E8%80%83%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/"/>
    <id>http://www.cphoenix.cn/2019/05/23/软考知识点整理/</id>
    <published>2019-05-23T02:29:12.000Z</published>
    <updated>2019-05-24T09:25:14.282Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据库系统工程师-软考知识点整理"><a href="#数据库系统工程师-软考知识点整理" class="headerlink" title=" 数据库系统工程师-软考知识点整理 "></a><font color="#8968CD" size="5"> 数据库系统工程师-软考知识点整理 </font></h2><h3 id="💯"><a href="#💯" class="headerlink" title="💯"></a><font color="#8B3A62">💯</font></h3><p>1.音频数字化过程中采样频率应为声音最高频率2倍</p><p>2.编译过程：词法分析阶段&gt;语法分析阶段&gt;语义分析阶段&gt;中间代码生成&gt;目标代码生成</p><p>3.面向对象方法中的多态：不同类的对象对同一消息做出不同响应。三个条件为有继承关系、子类重写父类方法、父类引用指向子类对象</p><p>4.外模式/模式：数据与程序的逻辑独立性，简称数据的逻辑独立性<br>  模式/内模式：数据与程序的物理独立性，简称数据的物理独立性</p><p>5.数据模型三要素：数据结构、数据操纵、完整性约束</p><p>6.候选码只出现在左边  </p><p>7.无损连接性判断：存在R1∩R2-&gt;R1-R2或R1∩R2-&gt;R2-R1被F逻辑蕴含的情况，则具有无损连接性<br>无损联接分解是将一个关系模式分解成若干个关系模式后，通过自然联接和投影等运算仍能还原到原来的关系模式，则称这种分解为无损联接分解。 </p><p>8.满足函数依赖的条件：分解后所有的关系模式加起来和原先的关系模式中的函数依赖是一样的</p><p>9.数据库概念结构设计阶段：抽象&gt;设计局部视图&gt;合并取消冲突&gt;修改重构消除冗余</p><p>10.路由策略：为了改变网络流量所经过的途径而修改路由信息的技术</p><p>11.网络层次与主要设备对应关系： 网络层-路由器，数据链路层-网桥、交换机，传输层和会话层-软件功能</p><p>12.I/O设备管理软件一般分4层：中断处理程序、设备驱动程序、与设备无关的系统软件和用户级软件</p><p>13.假如关系R和S的元数分别为r和s，那么他们的笛卡儿积就是r+s的元组组合，而若R有m个元组，S有n个元组，则R×S应有m*n个元组</p><p>14.脏读：读取未提交数据<br>&emsp;&nbsp;不可重复读：前后多次读取，读取内容不一致<br>&emsp;&nbsp;幻影读：前后多次读取，读取数据总量不一致</p><p>15.部分函数依赖：设X,Y是关系R的两个属性集合，存在X→Y，若X’是X的真子集，存在X’→Y，则称Y部分函数依赖于X。<br>举个例子：通过AB能得出C，通过A也能得出C，通过B也能得出C，那么说C部分依赖于AB。</p><p>完全函数依赖：设X,Y是关系R的两个属性集合，X’是X的真子集，存在X→Y，但对每一个X’都有X’!→Y，则称Y完全函数依赖于X。<br>举个例子：通过AB能得出C，但是AB单独得不出C，那么说C完全依赖于AB.</p><p>传递函数依赖：设X,Y,Z是关系R中互不相同的属性集合，存在X→Y(Y !→X),Y→Z，则称Z传递函数依赖于X。<br>举个例子：通过A得到B，通过B得到C，但是C得不到B，B得不到A，那么成C传递依赖于A</p><p>16.三种范式<br>1、第一范式（1NF）：一个关系模式R的所有属性都是不可分的基本数据项。<br>2、第二范式（2NF）：满足第一范式，然后消除部分依赖。<br>3、第三范式（3NF）： 满足第二范式，消除传递依赖。</p><p>17.触发器的定义：某个条件成立的时候，触发器里定义的语句就会被自动的执行。触发器不需要人为的去调用，也不能调用。<br>(1).语句级触发器：可以在某些语句执行前或执行后被触发<br>(2).行级触发器：在定义了触发的表中的行数据改变时就会被触发一次</p><p>18.E-R图<br>1.三要素：实体（矩形）、属性（椭圆形）、关系（菱形）<br>2.作为主键的属性在文字下面加下划线<br>3.多值属性 双线椭圆表示；派生属性 虚线椭圆表示；可选属性 椭圆的文字后用(o)表示</p><p>19.三类加密算法<br>三类：<br>(1).对称加密：加密和解密使用相同密钥的加密算法。DES、3DES、DESX、Blowfish、IDEA、RC4、RC5、RC6和AES</p><p>(2).非对称加密：加密和解密使用不同密钥的加密算法，也叫公私钥加密。RSA、ECC（移动设备用）、Diffie-Hellman、El Gamal、DSA（数字签名用）</p><p>(3).Hash算法：Hash算法常用在不可还原的密码存储、信息完整性校验等。MD2、MD4、MD5、HAVAL、SHA、SHA-1、HMAC、HMAC-MD5、HMAC-SHA1</p><p>非对称加密算法运行速度慢，可以实现签名；<br>对称加密算法，建议在需要加密大量数据的时候使用，提高加解密速度；</p><p>在实际的操作过程中，通常采用的方式是：采用非对称加密算法管理对称算法的密钥，然后用对称加密算法加密数据，这样我们就集成了两类加密算法的优点，既实现了加密速度快的优点，又实现了安全方便管理密钥的优点。</p><p>20.PV操作与信号量的处理有关，P表示通过，V表示释放。用一个信号量与一个消息联系起来，当信号量的值为0时，表示期望的消息尚未产生；当信号量的值非0时，表示期望的消息已经存在。用PV操作实现进程同步时，调用P操作测试消息是否到达，调用V操作发送消息。</p><p>21.2PL 两段锁协议<br>定义：所有的读写操作之前均需要加锁，解锁操作后不允许出现加锁操作。<br>S锁：加S锁后其他事务可读不可写，直至加锁事务结束；<br>X锁：加X锁后其他事务均不可读或者写，直至事务结束；<br>事务执行分两个阶段：1是获得封锁阶段，2是释放封锁阶段，2PL可能会产生死锁；<br>2PL可以防止丢失修改、读脏数据等；是事务可串行化的必要条件，但不是充分条件；</p><p>22.可串行性：当一组事务交叉执行的结果和串行执行的结果一致时，这组事务具有可串行性</p><p>23.一级锁：所有写操作前加X锁，事务结束释放，可以防止丢失修改<br>二级锁：所有写操作前加X锁，事务结束释放；读操作前加S锁，操作结束释放，可以防止丢失修改和读脏数据<br>三级锁：所有写操作前加X锁，事务结束释放；读操作前加S锁，事务结束释放，可以防止丢失修改和读脏数据、不可重复读。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;数据库系统工程师-软考知识点整理&quot;&gt;&lt;a href=&quot;#数据库系统工程师-软考知识点整理&quot; class=&quot;headerlink&quot; title=&quot; 数据库系统工程师-软考知识点整理 &quot;&gt;&lt;/a&gt;&lt;font color=&quot;#8968CD&quot; size=&quot;5&quot;&gt; 数据库系
      
    
    </summary>
    
    
      <category term="学习" scheme="http://www.cphoenix.cn/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>2019.05.23 ☀️</title>
    <link href="http://www.cphoenix.cn/2019/05/23/2019.05.23/"/>
    <id>http://www.cphoenix.cn/2019/05/23/2019.05.23/</id>
    <published>2019-05-23T01:52:39.000Z</published>
    <updated>2019-05-23T02:48:49.290Z</updated>
    
    <content type="html"><![CDATA[<h3 id="离考试还有两天，学习进度达到20-记录，😢"><a href="#离考试还有两天，学习进度达到20-记录，😢" class="headerlink" title="离考试还有两天，学习进度达到20%记录，😢"></a>离考试还有两天，学习进度达到20%记录，😢</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;离考试还有两天，学习进度达到20-记录，😢&quot;&gt;&lt;a href=&quot;#离考试还有两天，学习进度达到20-记录，😢&quot; class=&quot;headerlink&quot; title=&quot;离考试还有两天，学习进度达到20%记录，😢&quot;&gt;&lt;/a&gt;离考试还有两天，学习进度达到20%记录，
      
    
    </summary>
    
    
      <category term="零零碎碎" scheme="http://www.cphoenix.cn/tags/%E9%9B%B6%E9%9B%B6%E7%A2%8E%E7%A2%8E/"/>
    
  </entry>
  
  <entry>
    <title>2019.05.16 ☀️</title>
    <link href="http://www.cphoenix.cn/2019/05/16/2019.05.16/"/>
    <id>http://www.cphoenix.cn/2019/05/16/2019.05.16/</id>
    <published>2019-05-16T08:34:16.000Z</published>
    <updated>2019-05-23T02:46:57.506Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一些以前写的想法"><a href="#一些以前写的想法" class="headerlink" title="一些以前写的想法"></a>一些以前写的想法</h4><p>2018.10.25<br>梦会反映现实中捕捉不到的潜意识，负面的、希望的，然而使我略微欣慰的,是我在现实中隐隐意识到了，或许我在主动面对这样自己了。  </p><p>2018.11.06<br>突然就会很想感谢生命中的贵人，感谢他们在我人生中每一个微不足道的节骨眼助了力。  </p><p>2018.11.12<br>生日周的第一天变得很亢奋，一下不能理解原来的负面情绪都是从哪来的了。</p><p>2019.2.15<br>今天开始准备数据库系统工程师的考试，希望能坚持下去，要把大学的专业课重新看一遍，脑壳痛。脑子饱了，肚子瘪了。           </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一些以前写的想法&quot;&gt;&lt;a href=&quot;#一些以前写的想法&quot; class=&quot;headerlink&quot; title=&quot;一些以前写的想法&quot;&gt;&lt;/a&gt;一些以前写的想法&lt;/h4&gt;&lt;p&gt;2018.10.25&lt;br&gt;梦会反映现实中捕捉不到的潜意识，负面的、希望的，然而使我略微欣慰
      
    
    </summary>
    
    
      <category term="零零碎碎" scheme="http://www.cphoenix.cn/tags/%E9%9B%B6%E9%9B%B6%E7%A2%8E%E7%A2%8E/"/>
    
  </entry>
  
</feed>
